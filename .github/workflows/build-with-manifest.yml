#
# SPDX-FileCopyrightText: Copyright 2025 Arm Limited and/or its affiliates <open-source-office@arm.com>
# SPDX-License-Identifier: Apache-2.0
#
name: Build ML SDK

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      changed_repo: { type: string, required: true }  # e.g., org/repo-a
      changed_sha:  { type: string, required: true }  # e.g., 40-char sha

permissions:
  contents: read
  packages: read

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/arm/ml-sdk-linux-amd64:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user root

    steps:
      - name: Clone repositories and build
        env:
          MANIFEST_URL: https://github.com/arm/ai-ml-sdk-manifest.git
          REPO_DIR:     ${{ github.workspace }}/sdk
          INSTALL_DIR:  ${{ github.workspace }}/install
          CHANGED_REPO: ${{ inputs.changed_repo }}
          CHANGED_SHA:  ${{ inputs.changed_sha }}
        run: |
          mkdir -p $REPO_DIR && cd $REPO_DIR

          # Initialize the default manifest state
          repo init -u $MANIFEST_URL
          repo sync --no-clone-bundle -j $(nproc)

          if [ -n "$CHANGED_REPO" ]; then
            sudo apt-get update
            sudo apt-get install -y xmlstarlet

            # Create a local manifest override to pin the changed repo to the exact SHA
            mkdir -p .repo/local_manifests
            cat > .repo/local_manifests/override.xml <<EOF
            <manifest>
              <project name="${CHANGED_REPO}" revision="${CHANGED_SHA}"/>
            </manifest>
            EOF
            cat .repo/local_manifests/override.xml

            # Re-sync the changed project to the specified SHA
            PROJECT_PATH=$(repo manifest -r | xmlstarlet sel -t -v "//project[@name='${CHANGED_REPO}']/@path")
            if [ -z "$PROJECT_PATH" ]; then
              echo "Could not find project path for ${CHANGED_REPO} in manifest"
              exit 1
            fi
            echo "Changed project path: $PROJECT_PATH"
            repo sync -j $(nproc) --force-sync "$PROJECT_PATH"
          fi

          echo "Build VGF-Lib"
          # ./sw/vgf-lib/scripts/build.py -j $(nproc) --doc --test

          echo "Build Model Converter"
          # ./sw/model-converter/scripts/build.py -j $(nproc) --doc --test

          echo "Build Emulation Layer"
          # export VK_LAYER_PATH=$INSTALL_DIR/share/vulkan/explicit_layer.d
          # export LD_LIBRARY_PATH=$INSTALL_DIR/lib
          # ./sw/emulation-layer/scripts/build.py -j $(nproc) --doc --test --install $INSTALL_DIR

          echo "Build Scenario Runner"
          # export VK_INSTANCE_LAYERS=VK_LAYER_ML_Graph_Emulation:VK_LAYER_ML_Tensor_Emulation
          # ./sw/scenario-runner/scripts/build.py -j $(nproc) --doc --test

          echo "Build SDK Root"
